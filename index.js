var table=new Int16Array([0,1,4,7,8,9,10,16,17,18,19,20,21,22,23,25,26,27,28,29,32,36,44,45,47,48,49,56,57,60,64,75,77,84,88,92,112,113,116,119,120,122,128,129,131,132,133,134,137,138,139,140,144,148,156,157,159,160,161,168,169,170,172,175,176,184,185,187,188,189,193,196,200,204,213,215,224,225,228,231,232,234,236,239,240,241,243,245,246,252,253,256,260,262,268,269,271,273,280,284,288,297,300,301,308,309,312,316,324,325,327,329,336,340,344,353,355,364,365,368,371,372,373,374,379,380,381,383,385,386,392,393,396,400,412,413,420,439,448,449,452,456,464,465,467,476,480,484,504,505,508,511,512,513,520,521,523,525,532,560,561,564,567,568,570,576,577,579,581,582,586,588,589,590,592,596,598,604,605,607,608,609,613,616,617,620,624,632,633,635,636,637,644,645,652,700,701,702,704,708,716,717,719,720,721,728,729,732,744,747,749,756,760,764,775,776,781,784,812,813,816,818,820,828,829,831,833,834,835,840,841,848,860,861,868,869,889,896,900,904,912,913,917,924,952,953,956,960,967,968,969,971,973,974,980,988,1000,1001,1008,1009,1012,1016,1024,1025,1028,1036,1040,1044,1052,1053,1064,1092,1093,1096,1098,1100,1102,1107,1108,1109,1111,1113,1117,1148,1149,1152,1156,1164,1165,1167,1169,1176,1177,1178,1180,1183,1184,1185,1186,1192,1193,1195,1196,1197,1198,1199,1201,1203,1204,1205,1208,1212,1220,1221,1223,1224,1225,1232,1233,1236,1240,1248,1253,1288,1289,1291,1292,1296,1298,1299,1304,1305,1307,1308,1309,1315,1316,1317,1320,1324,1332,1333,1335,1336,1337,1344,1345,1348,1352,1360,1361,1364,1365,1368,1372,1376,1400,1401,1404,1408,1410,1416,1417,1419,1421,1426,1427,1428,1432,1436,1448,1484,1488,1492,1500,1501,1503,1512,1513,1516,1520,1529,1531,1533,1540,1541,1544,1547,1548,1556,1557,1559,1561,1568,1588,1596,1624,1628,1632,1640,1641,1652,1653,1660,1668,1669,1673,1680,1681,1684,1688,1689,1690,1696,1697,1699,1701,1702,1706,1708,1712,1716,1736,1737,1740,1744,1746,1752,1753,1755,1757,1762,1764,1765,1766,1768,1771,1772,1773,1774,1775,1779,1780,1781,1783,1784,1785,1786,1787,1791,1792,1793,1796,1800,1808,1809,1811,1812,1813,1820,1876,1877,1878,1880,1883,1884,1886,1887,1892,1893,1895,1897,1899,1902,1904,1905,1908,1912,1920,1921,1923,1924,1925,1932,1936,1940,1952,1953,1960,1964,1988,1989,1992,1995,1996,1998,2000,2004,2005,2007,2009,2011,2013,2016,2020,2024,2044,2064,2072,2076,2080,2088,2089,2091,2100,2128,2129,2132,2136,2144,2145,2147,2149,2156,2176,2184,2205,2212,2216,2220,2229,2231,2233,2240,2244,2248,2256,2261,2268,2269,2272,2275,2276,2278,2284,2285,2287,2289,2296,2324,2325,2328,2331,2332,2340,2341,2343,2344,2345,2346,2352,2353,2356,2360,2368,2369,2371,2372,2373,2379,2380,2381,2384,2388,2396,2397,2399,2400,2401,2464,2465,2468,2472,2474,2475,2480,2481,2483,2484,2485,2491,2492,2493,2496,2500,2508,2509,2511,2512,2513,2520,2540,2576,2577,2580,2584,2597,2604,2612,2632,2660,2664,2716,2717,2720,2724,2731,2732,2737,2772,2800,2804,2808,2816,2817,2821,2856,2857,2860,2863,2864,2872,2873,2875,2884,2888,2892,2900,2901,2912,2916,2920,2928,2929,2931,2933,2940,2941,2944,2948,2956,2957,2959,2960,2961,2962,2966,2967,2968,2969,2972,2976,2984,2985,2987,2988,2989,2996,2997,3000,3015,3017,3052,3053,3056,3060,3068,3069,3071,3072,3073,3079,3080,3081,3084,3088,3096,3097,3099,3101,3108,3109,3112,3116,3124,3125,3127,3128,3129,3136,3140,3153,3155,3164,3165,3168,3172,3180,3181,3183,3185,3192,3196,3213,3240,3248,3252,3256,3264,3265,3267,3269,3276,3280,3284,3293,3295,3297,3304,3305,3308,3312,3320,3321,3323,3325,3332,3352,3360,3388,3389,3392,3396,3404,3407,3409,3416,3417,3420,3424,3432,3433,3435,3437,3444,3445,3448,3452,3460,3461,3463,3465,3466,3469,3470,3500,3501,3504,3508,3516,3517,3519,3521,3528,3529,3532,3534,3535,3536,3537,3538,3544,3545,3547,3549,3550,3553,3555,3556,3557,3560,3564,3572,3573,3575,3576,3577,3578,3584,3585,3592,3605,3640,3641,3644,3648,3650,3656,3657,3659,3661,3662,3667,3668,3669,3672,3676,3684,3685,3687,3688,3689,3696,3697,3700,3704,3715,3716,3717,3719,3724,3752,3753,3755,3756,3760,3762,3768,3769,3771,3773,3780,3784,3800,3801,3836,3840,3844,3853,3855,3857,3864,3868,3872,3881,3883,3892,3893,3894,3896,3899,3900,3901,3902,3908,3909,3911,3913,3917,3919,3920,3924,3928,3937,3939,3948,3976,3980,3984,4004,4008,4012,4020,4023,4032,4036,4040,4048,4051,4088,4089,4092,4095,4096,4098,4104,4105,4107,4108,4109,4111,4113,4116,4117,4118,4119,4120,4123,4124,4125,4126,4127,4132,4133,4135,4137,4141,4144,4145,4148,4152,4160,4161,4163,4164,4165,4169,4172,4173,4176,4189,4228,4229,4232,4235,4236,4238,4244,4245,4247,4249,4250,4256,4257,4260,4263,4264,4272,4273,4275,4276,4277,4284,4285,4288,4292,4301,4303,4304,4305,4309,4312,4316,4340,4341,4342,4344,4348,4356,4357,4359,4361,4368,4372,4388,4396,4416,4424,4425,4428,4432,4440,4441,4452,4456,4480,4481,4484,4487,4488,4489,4490,4496,4497,4499,4501,4505,4506,4508,4516,4528,4536,4564,4565,4568,4572,4585,4592,4596,4600,4608,4611,4613,4620,4621,4624,4628,4636,4637,4639,4676,4677,4680,4684,4686,4692,4693,4695]);

function encode(buffer){
	if(!(buffer instanceof Buffer))throw TypeError("Argument should be a Buffer")
	var st=function(a){return String.fromCharCode(table[a]+44032)};
	var s=[]
	for(var i=0, l=buffer.length; i<l; i+=5){
		var p=[buffer[i], buffer[i+1], buffer[i+2], buffer[i+3], buffer[i+4]]

		if(p[1]==null){s.push(st(p[0]<<2), '흐흐흐'); break;}
		s.push(st(p[0]<<2|p[1]>>6))

		if(p[2]==null){s.push(st(p[1]%64<<4), '흐흐'); break;}
		s.push(st(p[1]%64<<4|p[2]>>4))

		if(p[3]==null){s.push(st(p[2]%16<<6), '흐'); break;}
		s.push(st(p[2]%16<<6|p[3]>>2))

		if(p[4]==null){s.push(st(p[3]%4+1024)); break;}
		s.push(st(p[3]%4<<8|p[4]))
	}
	return s.join('')
}

function decode(str){
	if(typeof str!=='string' || !str.match(/^[가-빗흐]+$/) || str.length%4!==0)throw TypeError("Argument should be a valid basehangul string")
	var a=str.split('')
	if(a.some(function(v, i, ar){
		var y=findTable(v.charCodeAt()-44032)
		if(y===undefined)return true
		ar[i]=y;
		return false;
	}))throw TypeError("Argument should be a valid basehangul string")
	var bytes=new Buffer(str.length*5/4|0)
	for(var i=0, l=str.length/4-1; i<l; ++i){
		var i4=i*4, i5=i*5
		bytes.writeUInt8(a[i4]>>2, i5)
		bytes.writeUInt8(a[i4]%4<<6|a[i4+1]>>4, i5+1)
		bytes.writeUInt8(a[i4+1]%16<<4|a[i4+2]>>6, i5+2)
		bytes.writeUInt8(a[i4+2]%64|a[i4+3]>>8, i5+3)
		bytes.writeUInt8(a[i4+3]%256, i5+4)
	}
	i4=i*4, i5=i*5
	bytes.writeUInt8(a[i4]>>2, i5)
	if(a[i4+1]===null)return bytes
	bytes.writeUInt8(a[i4]%4<<6|a[i4+1]>>4, i5+1)
	if(a[i4+2]===null)return bytes
	bytes.writeUInt8(a[i4+1]%16<<4|a[i4+2]>>6, i5+2)
	if(a[i4+3]===null)return bytes
	else if(a[i4+3]>=1024){
		var t=a[i4+3]-1024
		bytes.writeUInt8(a[i4+2]%64<<2|t, i5+3)
		return bytes
	}
	bytes.writeUInt8(a[i4+2]%64<<2|a[i4+3]>>8, i5+3)
	bytes.writeUInt8(a[i4+3]%256, i5+4)

	return bytes
}

function findTable(num){
	if(num===11088)return null;
	var a=num/4.57|0
	a=[a-6, a+64];
	if(a[0]<0)a[0]=0;
	if(a[1]>1027)a[1]=1027;
	var maxloop=7;
	while(maxloop-->0){
		if(a[0]===a[1]){
			if(table[a[0]]===num)return a[0];
			return undefined;
		}
		if(a[0]+1===a[1]){
			if(table[a[0]]===num)return a[0];
			if(table[a[1]]===num)return a[1];
			return undefined;
		}
		if(a[0]+2===a[1]){
			if(table[a[0]]===num)return a[0];
			if(table[a[0]+1]===num)return a[0]+1;
			if(table[a[1]]===num)return a[1];
			return undefined;
		}
		var i=(a[0]+a[1])/2|0, y=table[i];
		if(y===num)return i;
		else if(y>num)a[1]=i-1;
		else a[0]=i+1;
	}
}

// test: console.log(decode(encode( new Buffer("123d", "utf8") )).toString('utf8'))